// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parse should parse a json object 1`] = `
Object {
  "apiVersion": "policy/v1beta1",
  "kind": "PodSecurityPolicy",
  "metadata": Object {
    "name": "policy",
  },
  "spec": Object {
    "fsGroup": Object {
      "rule": "RunAsAny",
    },
    "runAsUser": Object {
      "rule": "RunAsAny",
    },
    "seLinux": Object {
      "rule": "RunAsAny",
    },
    "supplementalGroups": Object {
      "rule": "RunAsAny",
    },
    "volumes": Array [
      "*",
    ],
  },
}
`;

exports[`parse should parse a yaml object 1`] = `
Object {
  "apiVersion": "policy/v1beta1",
  "kind": "PodSecurityPolicy",
  "metadata": Object {
    "name": "policy",
  },
  "spec": Object {
    "fsGroup": Object {
      "rule": "RunAsAny",
    },
    "runAsUser": Object {
      "rule": "RunAsAny",
    },
    "seLinux": Object {
      "rule": "RunAsAny",
    },
    "supplementalGroups": Object {
      "rule": "RunAsAny",
    },
    "volumes": Array [
      "*",
    ],
  },
}
`;

exports[`transform_gatekeeper allowPrivilegeEscalation 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPAllowPrivilegeEscalationContainer",
    "metadata": Object {
      "name": "psp-k8spspallowprivilegeescalationcontainer",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": null,
    },
  },
]
`;

exports[`transform_gatekeeper allowedCapabilities 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPCapabilities",
    "metadata": Object {
      "name": "psp-k8spspcapabilities",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": Object {
        "allowedCapabilities": Array [
          "something",
        ],
        "requiredDropCapabilities": Array [],
      },
    },
  },
]
`;

exports[`transform_gatekeeper allowedFlexVolumes 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPFlexVolumes",
    "metadata": Object {
      "name": "psp-k8spspflexvolumes",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": Object {
        "allowedFlexVolumes": Array [
          Object {
            "driver": "example/lvm",
          },
        ],
      },
    },
  },
]
`;

exports[`transform_gatekeeper allowedHostPaths 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPPrivilegedContainer",
    "metadata": Object {
      "name": "psp-k8spspprivilegedcontainer",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": null,
    },
  },
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPHostFilesystem",
    "metadata": Object {
      "name": "psp-k8spsphostfilesystem",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": Object {
        "allowedHostPaths": Array [
          Object {
            "pathPrefix": "/foo",
            "readOnly": true,
          },
        ],
      },
    },
  },
]
`;

exports[`transform_gatekeeper allowedProcMountTypes 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPPrivilegedContainer",
    "metadata": Object {
      "name": "psp-k8spspprivilegedcontainer",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": null,
    },
  },
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPProcMount",
    "metadata": Object {
      "name": "psp-k8spspprocmount",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": Object {
        "procMount": "Default",
      },
    },
  },
]
`;

exports[`transform_gatekeeper allowedUnsafeSysctls 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPForbiddenSysctls",
    "metadata": Object {
      "name": "psp-k8spspforbiddensysctls",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": Object {
        "allowedSysctls": Array [
          "kernel.msgmax",
        ],
        "forbiddenSysctls": null,
      },
    },
  },
]
`;

exports[`transform_gatekeeper apparmor 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPAppArmor",
    "metadata": Object {
      "name": "psp-k8spspapparmor",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": Object {
        "allowedProfiles": Array [
          "runtime/default",
        ],
      },
    },
  },
]
`;

exports[`transform_gatekeeper defaultAddCapabilities 1`] = `
Array [
  Object {
    "apiVersion": "mutations.gatekeeper.sh/v1beta1",
    "kind": "ModifySet",
    "metadata": Object {
      "name": "psp-k8spspdefaultaddcapabilities",
    },
    "spec": Object {
      "applyTo": Array [
        Object {
          "groups": Array [
            "",
          ],
          "kinds": Array [
            "Pod",
          ],
          "versions": Array [
            "v1",
          ],
        },
      ],
      "location": "spec.containers[name:*].securityContext.capabilities.add",
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "*",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
        "scope": "Namespaced",
      },
      "parameters": Object {
        "values": Object {
          "fromList": Array [
            "something",
          ],
        },
      },
    },
  },
]
`;

exports[`transform_gatekeeper defaultAllowPrivilegeEscalation 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPAllowPrivilegeEscalationContainer",
    "metadata": Object {
      "name": "psp-k8spspallowprivilegeescalationcontainer",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": null,
    },
  },
  Object {
    "apiVersion": "mutations.gatekeeper.sh/v1beta1",
    "kind": "Assign",
    "metadata": Object {
      "name": "psp-k8spspdefaultallowprivilegeescalation",
    },
    "spec": Object {
      "applyTo": Array [
        Object {
          "groups": Array [
            "",
          ],
          "kinds": Array [
            "Pod",
          ],
          "versions": Array [
            "v1",
          ],
        },
      ],
      "location": "spec.containers[name:*].securityContext.allowPrivilegeEscalation",
      "parameters": Object {
        "assign": Object {
          "value": false,
        },
        "pathTests": Array [
          Object {
            "condition": "MustNotExist",
            "subPath": "spec.containers[name:*].securityContext.allowPrivilegeEscalation",
          },
        ],
      },
    },
  },
  Object {
    "apiVersion": "mutations.gatekeeper.sh/v1beta1",
    "kind": "Assign",
    "metadata": Object {
      "name": "psp-k8spspdefaultallowprivilegeescalation-init",
    },
    "spec": Object {
      "applyTo": Array [
        Object {
          "groups": Array [
            "",
          ],
          "kinds": Array [
            "Pod",
          ],
          "versions": Array [
            "v1",
          ],
        },
      ],
      "location": "spec.initContainers[name:*].securityContext.allowPrivilegeEscalation",
      "parameters": Object {
        "assign": Object {
          "value": false,
        },
        "pathTests": Array [
          Object {
            "condition": "MustNotExist",
            "subPath": "spec.initContainers[name:*].securityContext.allowPrivilegeEscalation",
          },
        ],
      },
    },
  },
]
`;

exports[`transform_gatekeeper forbiddenSysctls 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPForbiddenSysctls",
    "metadata": Object {
      "name": "psp-k8spspforbiddensysctls",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": Object {
        "allowedSysctls": null,
        "forbiddenSysctls": Array [
          "kernel.m*",
        ],
      },
    },
  },
]
`;

exports[`transform_gatekeeper fsgroup 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPPrivilegedContainer",
    "metadata": Object {
      "name": "psp-k8spspprivilegedcontainer",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": null,
    },
  },
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPAllowedUsers",
    "metadata": Object {
      "name": "psp-k8spspallowedusers",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": Object {
        "fsGroup": Object {
          "ranges": Array [
            Object {
              "max": 200,
              "min": 100,
            },
          ],
          "rule": "MustRunAs",
        },
      },
    },
  },
]
`;

exports[`transform_gatekeeper hostIPC 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPHostNamespace",
    "metadata": Object {
      "name": "psp-k8spsphostnamespace",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": null,
    },
  },
]
`;

exports[`transform_gatekeeper hostNetwork 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPHostNetworkingPorts",
    "metadata": Object {
      "name": "psp-k8spsphostnetworkingports",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": Object {
        "hostNetwork": false,
      },
    },
  },
]
`;

exports[`transform_gatekeeper hostPID 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPHostNamespace",
    "metadata": Object {
      "name": "psp-k8spsphostnamespace",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": null,
    },
  },
]
`;

exports[`transform_gatekeeper hostPorts 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPHostNetworkingPorts",
    "metadata": Object {
      "name": "psp-k8spsphostnetworkingports",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": Object {
        "hostNetwork": true,
        "max": 9000,
        "min": 80,
      },
    },
  },
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPHostNetworkingPorts",
    "metadata": Object {
      "name": "psp-k8spsphostnetworkingports",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": Object {
        "hostNetwork": false,
      },
    },
  },
]
`;

exports[`transform_gatekeeper privileged 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPPrivilegedContainer",
    "metadata": Object {
      "name": "psp-k8spspprivilegedcontainer",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": null,
    },
  },
]
`;

exports[`transform_gatekeeper readOnlyRootFilesystem 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPReadOnlyRootFilesystem",
    "metadata": Object {
      "name": "psp-k8spspreadonlyrootfilesystem",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": null,
    },
  },
]
`;

exports[`transform_gatekeeper requiredDropCapabilities 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPCapabilities",
    "metadata": Object {
      "name": "psp-k8spspcapabilities",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": Object {
        "allowedCapabilities": Array [],
        "requiredDropCapabilities": Array [
          "something",
        ],
      },
    },
  },
]
`;

exports[`transform_gatekeeper runAsGroup 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPPrivilegedContainer",
    "metadata": Object {
      "name": "psp-k8spspprivilegedcontainer",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": null,
    },
  },
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPAllowedUsers",
    "metadata": Object {
      "name": "psp-k8spspallowedusers",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": Object {
        "runAsGroup": Object {
          "ranges": Array [
            Object {
              "max": 200,
              "min": 100,
            },
          ],
          "rule": "MustRunAs",
        },
      },
    },
  },
]
`;

exports[`transform_gatekeeper runAsUser 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPPrivilegedContainer",
    "metadata": Object {
      "name": "psp-k8spspprivilegedcontainer",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": null,
    },
  },
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPAllowedUsers",
    "metadata": Object {
      "name": "psp-k8spspallowedusers",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": Object {
        "runAsUser": Object {
          "ranges": Array [
            Object {
              "max": 200,
              "min": 100,
            },
          ],
          "rule": "MustRunAs",
        },
      },
    },
  },
]
`;

exports[`transform_gatekeeper seLinux 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPSELinuxV2",
    "metadata": Object {
      "name": "psp-k8spspselinuxv2",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": Object {
        "allowedSELinuxOptions": Array [
          Object {
            "level": "s0:c123,c456",
            "role": "object_r",
            "type": "svirt_sandbox_file_t",
            "user": "system_u",
          },
        ],
      },
    },
  },
]
`;

exports[`transform_gatekeeper seccomp 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPSeccomp",
    "metadata": Object {
      "name": "psp-k8spspseccomp",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": Object {
        "allowedProfiles": Array [
          "runtime/default",
          "docker/default",
        ],
      },
    },
  },
]
`;

exports[`transform_gatekeeper supplementalGroups 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPPrivilegedContainer",
    "metadata": Object {
      "name": "psp-k8spspprivilegedcontainer",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": null,
    },
  },
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPAllowedUsers",
    "metadata": Object {
      "name": "psp-k8spspallowedusers",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": Object {
        "supplementalGroups": Object {
          "ranges": Array [
            Object {
              "max": 200,
              "min": 100,
            },
          ],
          "rule": "MustRunAs",
        },
      },
    },
  },
]
`;

exports[`transform_gatekeeper volumes 1`] = `
Array [
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPPrivilegedContainer",
    "metadata": Object {
      "name": "psp-k8spspprivilegedcontainer",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": null,
    },
  },
  Object {
    "apiVersion": "constraints.gatekeeper.sh/v1beta1",
    "kind": "K8sPSPVolumeTypes",
    "metadata": Object {
      "name": "psp-k8spspvolumetypes",
    },
    "spec": Object {
      "match": Object {
        "kinds": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "kinds": Array [
              "Pod",
            ],
          },
        ],
      },
      "parameters": Object {
        "volumes": Array [
          "projected",
          "emptyDir",
        ],
      },
    },
  },
]
`;

exports[`transform_kubewarden allowPrivilegeEscalation 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-defaultallowprivilegeescalation",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/allow-privilege-escalation-psp:v0.1.10",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "default_allow_privilege_escalation": false,
      },
    },
  },
]
`;

exports[`transform_kubewarden allowedCapabilities 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-capabilities",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/capabilities-psp:v0.1.8",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "allowed_capabilities": Array [
          "something",
        ],
        "default_add_capabilities": undefined,
        "required_drop_capabilities": undefined,
      },
    },
  },
]
`;

exports[`transform_kubewarden allowedFlexVolumes 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-allowedflexvolumes",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/flexvolume-drivers-psp:v0.1.1",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "allowedFlexVolumes": Array [
          Object {
            "driver": "example/lvm",
          },
        ],
      },
    },
  },
]
`;

exports[`transform_kubewarden allowedHostPaths 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-privileged",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/pod-privileged:v0.1.9",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": null,
    },
  },
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-allowedhostpaths",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/hostpaths-psp:v0.1.4",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "allowedHostPaths": Array [
          Object {
            "pathPrefix": "/foo",
            "readOnly": true,
          },
        ],
      },
    },
  },
]
`;

exports[`transform_kubewarden allowedProcMountTypes 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-privileged",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/pod-privileged:v0.1.9",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": null,
    },
  },
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-allowedprocmounttypes",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/allowed-proc-mount-types-psp:v0.1.2",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "allow_unmasked_proc_mount_type": false,
      },
    },
  },
]
`;

exports[`transform_kubewarden allowedUnsafeSysctls 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-allowedprocmounttypes",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/sysctl-psp:v0.1.6",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "allowedUnsafeSysctls": Array [
          "kernel.msgmax",
        ],
        "forbiddenSysctls": undefined,
      },
    },
  },
]
`;

exports[`transform_kubewarden apparmor 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-apparmor",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/apparmor-psp:v0.1.8",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "allowed_profiles": Array [
          "runtime/default",
        ],
      },
    },
  },
]
`;

exports[`transform_kubewarden defaultAddCapabilities 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-capabilities",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/capabilities-psp:v0.1.8",
      "mutating": true,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "allowed_capabilities": Array [
          "something",
        ],
        "default_add_capabilities": Array [
          "something",
        ],
        "required_drop_capabilities": undefined,
      },
    },
  },
]
`;

exports[`transform_kubewarden defaultAllowPrivilegeEscalation 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-defaultallowprivilegeescalation",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/allow-privilege-escalation-psp:v0.1.10",
      "mutating": true,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "default_allow_privilege_escalation": false,
      },
    },
  },
]
`;

exports[`transform_kubewarden forbiddenSysctls 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-allowedprocmounttypes",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/sysctl-psp:v0.1.6",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "allowedUnsafeSysctls": undefined,
        "forbiddenSysctls": Array [
          "kernel.m*",
        ],
      },
    },
  },
]
`;

exports[`transform_kubewarden fsgroup 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-privileged",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/pod-privileged:v0.1.9",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": null,
    },
  },
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-fsgroup",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/allowed-fsgroups-psp:v0.1.1",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "ranges": Array [
          Object {
            "max": 200,
            "min": 100,
          },
        ],
        "rule": "MustRunAs",
      },
    },
  },
]
`;

exports[`transform_kubewarden hostIPC 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-hostnamespaces",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/host-namespaces-psp:v0.1.1",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "allow_host_ipc": false,
        "allow_host_network": undefined,
        "allow_host_pid": undefined,
        "allow_host_ports": undefined,
      },
    },
  },
]
`;

exports[`transform_kubewarden hostNetwork 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-hostnamespaces",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/host-namespaces-psp:v0.1.1",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "allow_host_ipc": undefined,
        "allow_host_network": false,
        "allow_host_pid": undefined,
        "allow_host_ports": undefined,
      },
    },
  },
]
`;

exports[`transform_kubewarden hostPID 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-hostnamespaces",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/host-namespaces-psp:v0.1.1",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "allow_host_ipc": undefined,
        "allow_host_network": undefined,
        "allow_host_pid": false,
        "allow_host_ports": undefined,
      },
    },
  },
]
`;

exports[`transform_kubewarden hostPorts 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-hostnamespaces",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/host-namespaces-psp:v0.1.1",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "allow_host_ipc": undefined,
        "allow_host_network": false,
        "allow_host_pid": undefined,
        "allow_host_ports": Array [
          Object {
            "max": 9000,
            "min": 80,
          },
        ],
      },
    },
  },
]
`;

exports[`transform_kubewarden privileged 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-privileged",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/pod-privileged:v0.1.9",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": null,
    },
  },
]
`;

exports[`transform_kubewarden readOnlyRootFilesystem 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-readonlyrootfilesystem",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/readonly-root-filesystem-psp:v0.1.2",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": null,
    },
  },
]
`;

exports[`transform_kubewarden requiredDropCapabilities 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-capabilities",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/capabilities-psp:v0.1.8",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "allowed_capabilities": Array [],
        "default_add_capabilities": undefined,
        "required_drop_capabilities": Array [
          "something",
        ],
      },
    },
  },
]
`;

exports[`transform_kubewarden runAsGroup 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-privileged",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/pod-privileged:v0.1.9",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": null,
    },
  },
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-usergroup",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/user-group-psp:v0.1.3
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "run_as_group": Object {
          "ranges": Array [
            Object {
              "max": 200,
              "min": 100,
            },
          ],
          "rule": "MustRunAs",
        },
        "run_as_user": Object {
          "rule": "RunAsAny",
        },
        "supplemental_groups": Object {
          "rule": "RunAsAny",
        },
      },
    },
  },
]
`;

exports[`transform_kubewarden runAsUser 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-privileged",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/pod-privileged:v0.1.9",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": null,
    },
  },
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-usergroup",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/user-group-psp:v0.1.3
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "run_as_group": undefined,
        "run_as_user": Object {
          "ranges": Array [
            Object {
              "max": 200,
              "min": 100,
            },
          ],
          "rule": "MustRunAs",
        },
        "supplemental_groups": Object {
          "rule": "RunAsAny",
        },
      },
    },
  },
]
`;

exports[`transform_kubewarden seLinux 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-selinux",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/selinux-psp:v0.1.4",
      "mutating": true,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "level": "s0:c123,c456",
        "role": "object_r",
        "rule": "MustRunAs",
        "type": "svirt_sandbox_file_t",
        "user": "system_u",
      },
    },
  },
]
`;

exports[`transform_kubewarden seccomp 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-seccomp",
    },
    "spec": Object {
      "module": "registry://ghcr.io/jvanz/policies/seccomp-psp:issue6",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "allowed_profiles": Array [
          "runtime/default",
          "docker/default",
        ],
        "localhost_profiles": Array [],
        "profile_types": Array [
          "RuntimeDefault",
        ],
      },
    },
  },
]
`;

exports[`transform_kubewarden supplementalGroups 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-privileged",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/pod-privileged:v0.1.9",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": null,
    },
  },
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-usergroup",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/user-group-psp:v0.1.3
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "run_as_group": undefined,
        "run_as_user": Object {
          "rule": "RunAsAny",
        },
        "supplemental_groups": Object {
          "ranges": Array [
            Object {
              "max": 200,
              "min": 100,
            },
          ],
          "rule": "MustRunAs",
        },
      },
    },
  },
]
`;

exports[`transform_kubewarden volumes 1`] = `
Array [
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-privileged",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/pod-privileged:v0.1.9",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": null,
    },
  },
  Object {
    "apiVersion": "policies.kubewarden.io/v1alpha2",
    "kind": "ClusterAdmissionPolicy",
    "metadata": Object {
      "name": "psp-volumes",
    },
    "spec": Object {
      "module": "registry://ghcr.io/kubewarden/policies/volumes-psp:v0.1.4",
      "mutating": false,
      "rules": Array [
        Object {
          "apiGroups": Array [
            "",
          ],
          "apiVersions": Array [
            "v1",
          ],
          "operations": Array [
            "CREATE",
            "UPDATE",
          ],
          "resources": Array [
            "pods",
          ],
        },
      ],
      "settings": Object {
        "allowedTypes": Array [
          "projected",
          "emptyDir",
        ],
      },
    },
  },
]
`;

exports[`transform_kyverno allowPrivilegeEscalation 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-allowprivilegeescalation",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-allowprivilegeescalation-0",
          "validate": Object {
            "message": "Rejected by psp-allowprivilegeescalation-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(ephemeralContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(allowPrivilegeEscalation)": false,
                    },
                  },
                ],
                "=(initContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(allowPrivilegeEscalation)": false,
                    },
                  },
                ],
                "containers": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(allowPrivilegeEscalation)": false,
                    },
                  },
                ],
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno allowedCapabilities 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-allowedcapabilities",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-allowedcapabilities-0",
          "preconditions": Object {
            "all": Array [
              Object {
                "key": "{{ request.object.spec.initContainers[] | length(@) }}",
                "operator": "GreaterThanOrEquals",
                "value": 1,
              },
            ],
          },
          "validate": Object {
            "foreach": Array [
              Object {
                "deny": Object {
                  "conditions": Object {
                    "any": Array [
                      Object {
                        "key": "{{ element.add }}",
                        "operator": "AnyNotIn",
                        "value": Array [
                          "something",
                        ],
                      },
                    ],
                  },
                },
                "list": "request.object.spec.initContainers[].securityContext.capabilities",
              },
            ],
            "message": "Rejected by psp-allowedcapabilities-0 rule",
          },
        },
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-allowedcapabilities-1",
          "validate": Object {
            "foreach": Array [
              Object {
                "deny": Object {
                  "conditions": Object {
                    "any": Array [
                      Object {
                        "key": "{{ element.add }}",
                        "operator": "AnyNotIn",
                        "value": Array [
                          "something",
                        ],
                      },
                    ],
                  },
                },
                "list": "request.object.spec.containers[].securityContext.capabilities",
              },
            ],
            "message": "Rejected by psp-allowedcapabilities-1 rule",
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno allowedFlexVolumes 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-allowedflexvolumes",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-allowedflexvolumes-0",
          "validate": Object {
            "message": "Rejected by psp-allowedflexvolumes-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(volumes)": Array [
                  Object {
                    "=(flexVolume)": Object {
                      "driver": "example/lvm",
                    },
                  },
                ],
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno allowedHostPaths 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-privileged",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-privileged-0",
          "validate": Object {
            "message": "Rejected by psp-privileged-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(ephemeralContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
                "=(initContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
                "containers": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-allowedhostpaths",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-allowedhostpaths-0",
          "preconditions": Object {
            "all": Array [
              Object {
                "key": "{{ request.object.spec.volumes[?hostPath] | length(@) }}",
                "operator": "GreaterThanOrEquals",
                "value": 1,
              },
            ],
          },
          "validate": Object {
            "foreach": Array [
              Object {
                "deny": Object {
                  "conditions": Array [
                    Object {
                      "key": "{{ element.path  | to_string(@) | split(@, '/') | [1] }}",
                      "operator": "NotEquals",
                      "value": "foo",
                    },
                  ],
                },
                "list": "request.object.spec.volumes[?hostPath].hostPath",
              },
            ],
            "message": "Rejected by psp-allowedhostpaths-0 rule",
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno allowedProcMountTypes 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-privileged",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-privileged-0",
          "validate": Object {
            "message": "Rejected by psp-privileged-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(ephemeralContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
                "=(initContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
                "containers": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-allowedprocmounttypes",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-allowedprocmounttypes-0",
          "validate": Object {
            "message": "Rejected by psp-allowedprocmounttypes-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(ephemeralContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(procMount)": "Default",
                    },
                  },
                ],
                "=(initContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(procMount)": "Default",
                    },
                  },
                ],
                "containers": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(procMount)": "Default",
                    },
                  },
                ],
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno allowedUnsafeSysctls 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-allowedunsafesysctls",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-allowedunsafesysctls-0",
          "validate": Object {
            "anyPattern": Array [
              Object {
                "spec": Object {
                  "=(securityContext)": Object {
                    "=(sysctls)": Array [
                      Object {
                        "name": "kernel.msgmax",
                      },
                    ],
                  },
                },
              },
              Object {
                "spec": Object {
                  "containers": Object {
                    "securitycontext": Object {
                      "=(securityContext)": Object {
                        "=(sysctls)": Array [
                          Object {
                            "name": "kernel.msgmax",
                          },
                        ],
                      },
                    },
                  },
                },
              },
            ],
            "message": "Rejected by psp-allowedunsafesysctls-0 rule",
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno apparmor 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-apparmor",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-apparmor-0",
          "validate": Object {
            "message": "Rejected by psp-apparmor-0 rule",
            "pattern": Object {
              "metadata": Object {
                "=(annotations)": Object {
                  "=(container.apparmor.security.beta.kubernetes.io/*)": "runtime/default",
                },
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno defaultAddCapabilities 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-defaultaddcapabilities",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "mutate": Object {
            "patchesJson6902": "
- op: add
  path: \\"/spec/securityContext/capabilities/add/-\\"
  value: something",
          },
          "name": "psp-defaultaddcapabilities-0",
        },
      ],
      "schemaValidation": false,
    },
  },
]
`;

exports[`transform_kyverno defaultAllowPrivilegeEscalation 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-allowprivilegeescalation",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-allowprivilegeescalation-0",
          "validate": Object {
            "message": "Rejected by psp-allowprivilegeescalation-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(ephemeralContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(allowPrivilegeEscalation)": false,
                    },
                  },
                ],
                "=(initContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(allowPrivilegeEscalation)": false,
                    },
                  },
                ],
                "containers": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(allowPrivilegeEscalation)": false,
                    },
                  },
                ],
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-defaultallowprivilegeescalation",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "mutate": Object {
            "patchesJson6902": "
- op: add
  path: \\"/spec/securityContext/allowPrivilegeEscalation\\"
  value: false",
          },
          "name": "psp-defaultallowprivilegeescalation-0",
        },
      ],
      "schemaValidation": false,
    },
  },
]
`;

exports[`transform_kyverno forbiddenSysctls 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-forbiddensysctls",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-forbiddensysctls-0",
          "validate": Object {
            "anyPattern": Array [
              Object {
                "spec": Object {
                  "=(securityContext)": Object {
                    "=(sysctls)": Array [
                      Object {
                        "name": "!kernel.m*",
                      },
                    ],
                  },
                },
              },
              Object {
                "spec": Object {
                  "containers": Object {
                    "=(securityContext)": Object {
                      "=(sysctls)": Array [
                        Object {
                          "name": "!kernel.m*",
                        },
                      ],
                    },
                  },
                },
              },
            ],
            "message": "Rejected by psp-forbiddensysctls-0 rule",
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno fsgroup 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-privileged",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-privileged-0",
          "validate": Object {
            "message": "Rejected by psp-privileged-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(ephemeralContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
                "=(initContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
                "containers": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-fsgroup",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-fsgroup-0",
          "validate": Object {
            "anyPattern": Array [
              Object {
                "spec": Object {
                  "securityContext": Object {
                    "fsGroup": ">=100 & <=200",
                  },
                },
              },
              Object {
                "spec": Object {
                  "=(ephemeralContainers)": Array [
                    Object {
                      "securityContext": Object {
                        "fsGroup": ">=100 & <=200",
                      },
                    },
                  ],
                  "=(initContainers)": Array [
                    Object {
                      "securityContext": Object {
                        "fsGroup": ">=100 & <=200",
                      },
                    },
                  ],
                  "=(securityContext)": Object {
                    "=(fsGroup)": ">=100 & <=200",
                  },
                  "containers": Array [
                    Object {
                      "securityContext": Object {
                        "fsGroup": ">=100 & <=200",
                      },
                    },
                  ],
                },
              },
            ],
            "message": "Rejected by psp-fsgroup-0 rule",
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno hostIPC 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-hostipc",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-hostipc-0",
          "validate": Object {
            "message": "Rejected by psp-hostipc-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(hostIPC)": false,
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno hostNetwork 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-hostnetwork",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-hostnetwork-0",
          "validate": Object {
            "message": "Rejected by psp-hostnetwork-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(hostNetwork)": false,
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno hostPID 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-hostpid",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-hostpid-0",
          "validate": Object {
            "message": "Rejected by psp-hostpid-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(hostPID)": false,
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno hostPorts 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-hostports",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-hostports-0",
          "validate": Object {
            "message": "Rejected by psp-hostports-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(ephemeralContainers)": Array [
                  Object {
                    "=(ports)": Array [
                      Object {
                        "=(hostPort)": ">=80 & <=9000",
                      },
                    ],
                  },
                ],
                "=(initContainers)": Array [
                  Object {
                    "=(ports)": Array [
                      Object {
                        "=(hostPort)": ">=80 & <=9000",
                      },
                    ],
                  },
                ],
                "containers": Array [
                  Object {
                    "=(ports)": Array [
                      Object {
                        "=(hostPort)": ">=80 & <=9000",
                      },
                    ],
                  },
                ],
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-hostnetwork",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-hostnetwork-0",
          "validate": Object {
            "message": "Rejected by psp-hostnetwork-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(hostNetwork)": false,
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno privileged 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-privileged",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-privileged-0",
          "validate": Object {
            "message": "Rejected by psp-privileged-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(ephemeralContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
                "=(initContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
                "containers": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno readOnlyRootFilesystem 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-readonlyrootfilesystem",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-readonlyrootfilesystem-0",
          "validate": Object {
            "message": "Rejected by psp-readonlyrootfilesystem-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(ephemeralContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(readOnlyRootFilesystem)": true,
                    },
                  },
                ],
                "=(initContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(readOnlyRootFilesystem)": true,
                    },
                  },
                ],
                "containers": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(readOnlyRootFilesystem)": true,
                    },
                  },
                ],
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno requiredDropCapabilities 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-requireddropcapabilities",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-requireddropcapabilities-0",
          "validate": Object {
            "message": "Rejected by psp-requireddropcapabilities-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(ephemeralContainers)": Array [
                  Object {
                    "securityContext": Object {
                      "capabilities": Object {
                        "drop": Array [
                          "something",
                        ],
                      },
                    },
                  },
                ],
                "=(initContainers)": Array [
                  Object {
                    "securityContext": Object {
                      "capabilities": Object {
                        "drop": Array [
                          "something",
                        ],
                      },
                    },
                  },
                ],
                "containers": Array [
                  Object {
                    "securityContext": Object {
                      "capabilities": Object {
                        "drop": Array [
                          "something",
                        ],
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno runAsGroup 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-privileged",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-privileged-0",
          "validate": Object {
            "message": "Rejected by psp-privileged-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(ephemeralContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
                "=(initContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
                "containers": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-runasgroup",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-runasgroup-0",
          "validate": Object {
            "anyPattern": Array [
              Object {
                "spec": Object {
                  "securityContext": Object {
                    "runAsGroup": ">=100 & <=200",
                  },
                },
              },
              Object {
                "spec": Object {
                  "=(ephemeralContainers)": Array [
                    Object {
                      "securityContext": Object {
                        "runAsGroup": ">=100 & <=200",
                      },
                    },
                  ],
                  "=(initContainers)": Array [
                    Object {
                      "securityContext": Object {
                        "runAsGroup": ">=100 & <=200",
                      },
                    },
                  ],
                  "=(securityContext)": Object {
                    "=(runAsGroup)": ">=100 & <=200",
                  },
                  "containers": Array [
                    Object {
                      "securityContext": Object {
                        "runAsGroup": ">=100 & <=200",
                      },
                    },
                  ],
                },
              },
            ],
            "message": "Rejected by psp-runasgroup-0 rule",
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno runAsUser 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-privileged",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-privileged-0",
          "validate": Object {
            "message": "Rejected by psp-privileged-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(ephemeralContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
                "=(initContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
                "containers": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-runasuser",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-runasuser-0",
          "validate": Object {
            "anyPattern": Array [
              Object {
                "spec": Object {
                  "securityContext": Object {
                    "runAsUser": ">=100 & <=200",
                  },
                },
              },
              Object {
                "spec": Object {
                  "=(ephemeralContainers)": Array [
                    Object {
                      "securityContext": Object {
                        "runAsUser": ">=100 & <=200",
                      },
                    },
                  ],
                  "=(initContainers)": Array [
                    Object {
                      "securityContext": Object {
                        "runAsUser": ">=100 & <=200",
                      },
                    },
                  ],
                  "=(securityContext)": Object {
                    "=(runAsUser)": ">=100 & <=200",
                  },
                  "containers": Array [
                    Object {
                      "securityContext": Object {
                        "runAsUser": ">=100 & <=200",
                      },
                    },
                  ],
                },
              },
            ],
            "message": "Rejected by psp-runasuser-0 rule",
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno seLinux 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-selinux",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-selinux-0",
          "validate": Object {
            "anyPattern": Array [
              Object {
                "spec": Object {
                  "securityContext": Object {
                    "seLinuxOptions": Object {
                      "level": "s0:c123,c456",
                      "role": "object_r",
                      "type": "svirt_sandbox_file_t",
                      "user": "system_u",
                    },
                  },
                },
              },
              Object {
                "spec": Object {
                  "=(initContainers)": Array [
                    Object {
                      "securityContext": Object {
                        "seLinuxOptions": Object {
                          "level": "s0:c123,c456",
                          "role": "object_r",
                          "type": "svirt_sandbox_file_t",
                          "user": "system_u",
                        },
                      },
                    },
                  ],
                  "=(securityContext)": Object {
                    "=(seLinuxOptions)": Object {
                      "level": "s0:c123,c456",
                      "role": "object_r",
                      "type": "svirt_sandbox_file_t",
                      "user": "system_u",
                    },
                  },
                  "containers": Array [
                    Object {
                      "securityContext": Object {
                        "seLinuxOptions": Object {
                          "level": "s0:c123,c456",
                          "role": "object_r",
                          "type": "svirt_sandbox_file_t",
                          "user": "system_u",
                        },
                      },
                    },
                  ],
                },
              },
            ],
            "message": "Rejected by psp-selinux-0 rule",
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno seccomp 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-seccomp",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-seccomp-0",
          "validate": Object {
            "message": "Rejected by psp-seccomp-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(ephemeralContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(seccompProfile)": Object {
                        "type": "RuntimeDefault",
                      },
                    },
                  },
                ],
                "=(initContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(seccompProfile)": Object {
                        "type": "RuntimeDefault",
                      },
                    },
                  },
                ],
                "=(securityContext)": Object {
                  "=(seccompProfile)": Object {
                    "type": "RuntimeDefault",
                  },
                },
                "containers": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(seccompProfile)": Object {
                        "type": "RuntimeDefault",
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno supplementalGroups 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-privileged",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-privileged-0",
          "validate": Object {
            "message": "Rejected by psp-privileged-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(ephemeralContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
                "=(initContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
                "containers": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-supplementalgroups",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-supplementalgroups-0",
          "validate": Object {
            "foreach": Array [
              Object {
                "deny": Object {
                  "conditions": Object {
                    "any": Array [
                      Object {
                        "key": "{{ element.supplementalGroups }}",
                        "operator": "AnyNotIn",
                        "value": Array [
                          100,
                          101,
                          102,
                          103,
                          104,
                          105,
                          106,
                          107,
                          108,
                          109,
                          110,
                          111,
                          112,
                          113,
                          114,
                          115,
                          116,
                          117,
                          118,
                          119,
                          120,
                          121,
                          122,
                          123,
                          124,
                          125,
                          126,
                          127,
                          128,
                          129,
                          130,
                          131,
                          132,
                          133,
                          134,
                          135,
                          136,
                          137,
                          138,
                          139,
                          140,
                          141,
                          142,
                          143,
                          144,
                          145,
                          146,
                          147,
                          148,
                          149,
                          150,
                          151,
                          152,
                          153,
                          154,
                          155,
                          156,
                          157,
                          158,
                          159,
                          160,
                          161,
                          162,
                          163,
                          164,
                          165,
                          166,
                          167,
                          168,
                          169,
                          170,
                          171,
                          172,
                          173,
                          174,
                          175,
                          176,
                          177,
                          178,
                          179,
                          180,
                          181,
                          182,
                          183,
                          184,
                          185,
                          186,
                          187,
                          188,
                          189,
                          190,
                          191,
                          192,
                          193,
                          194,
                          195,
                          196,
                          197,
                          198,
                          199,
                          200,
                        ],
                      },
                    ],
                  },
                },
                "list": "request.object.spec.securityContext",
              },
            ],
            "message": "Rejected by psp-supplementalgroups-0 rule",
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;

exports[`transform_kyverno volumes 1`] = `
Array [
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-privileged",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-privileged-0",
          "validate": Object {
            "message": "Rejected by psp-privileged-0 rule",
            "pattern": Object {
              "spec": Object {
                "=(ephemeralContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
                "=(initContainers)": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
                "containers": Array [
                  Object {
                    "=(securityContext)": Object {
                      "=(privileged)": false,
                    },
                  },
                ],
              },
            },
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
  ClusterPolicy {
    "apiVersion": "kyverno.io/v1",
    "kind": "ClusterPolicy",
    "metadata": Object {
      "name": "psp-volumes",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "match": Object {
            "resources": Object {
              "kinds": Array [
                "Pod",
              ],
            },
          },
          "name": "psp-volumes-0",
          "preconditions": Object {
            "all": Array [
              Object {
                "key": "{{ request.object.spec.volumes[].keys(@)[] | length(@) }}",
                "operator": "GreaterThan",
                "value": 0,
              },
            ],
          },
          "validate": Object {
            "deny": Object {
              "conditions": Object {
                "all": Array [
                  Object {
                    "key": "{{ request.object.spec.volumes[].keys(@)[] }}",
                    "operator": "AnyNotIn",
                    "value": Array [
                      "name",
                      "projected",
                      "emptyDir",
                    ],
                  },
                ],
              },
            },
            "message": "Rejected by psp-volumes-0 rule",
          },
        },
      ],
      "validationFailureAction": "enforce",
    },
  },
]
`;
